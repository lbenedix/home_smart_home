esphome:
  name: "hdmi-cec-demo"
  platform: ESP8266
  board: d1_mini
  platformio_options:
    board_build.f_cpu: 160000000L

external_components:
  - source: github://Palakis/esphome-hdmi-cec

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: !secret encryption_key
  services:
    - service: hdmi_cec_send
      variables:
        cec_source: int
        cec_destination: int
        cec_data: int[]
      then:
        - hdmi_cec.send:
            source: !lambda "return static_cast<unsigned char>(cec_source);"
            destination: !lambda "return static_cast<unsigned char>(cec_destination);"
            data: !lambda "std::vector<unsigned char> charVector; for (int i : cec_data) { charVector.push_back(static_cast<unsigned char>(i)); } return charVector;"

# Enable OTA
ota:
  password: !secret mgmt_pass

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: True

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:

captive_portal:

web_server:
  port: 80

hdmi_cec:
  pin: GPIO2
  address: 0x4
  physical_address: 0x4000
  on_message:
    # Volume Up
    - data: [0x44, 0x41]
      then:
        logger.log: "Volume Up"

    # Volume Down
    - data: [0x44, 0x42]
      then:
        logger.log: "Volume Down"

    # Mute
    - data: [0x44, 0x43]
      then:
        - logger.log: "Mute"

button:
  - platform: template
    name: TV Volume Up
    on_press:
      - hdmi_cec.send:
          destination: 0xF
          data: [0x44, 0x41]

  - platform: template
    name: TV Volume Down
    on_press:
      - hdmi_cec.send:
          destination: 0xF
          data: [0x44, 0x42]

  - platform: template
    name: Activate TV
    on_press:
      - hdmi_cec.send:
          destination: 0x0
          data: [0x04]

  - platform: template
    name: Standby Broadcast
    on_press:
      - hdmi_cec.send:
          destination: 0xF
          data: [0x36]

  - platform: template
    name: Standby TV
    on_press:
      - hdmi_cec.send:
          destination: 0x0
          data: [0x36]
